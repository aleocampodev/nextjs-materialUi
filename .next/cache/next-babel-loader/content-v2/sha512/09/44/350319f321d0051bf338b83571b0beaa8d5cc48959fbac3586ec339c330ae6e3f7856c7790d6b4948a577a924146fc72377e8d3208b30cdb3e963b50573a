{"ast":null,"code":"import _defineProperty from \"/Users/alejaocampo/Downloads/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alejaocampo/Downloads/package/components/Banner/Search/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useForm } from \"react-hook-form\";\nimport { Typography } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useStylesSearch, BootstrapInput } from \"./SearchStyle\";\nimport { useState, useEffect } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nvar Search = function Search(_ref) {\n  _s();\n\n  var _errors$transaction, _errors$properties;\n\n  var transactions = _ref.transactions,\n      properties = _ref.properties,\n      cities = _ref.cities;\n  console.log(transactions);\n  console.log(properties);\n  var classes = useStylesSearch();\n\n  var _useState = useState(1),\n      cityTypeField = _useState[0],\n      setCityTypeField = _useState[1];\n\n  var _useState2 = useState(1),\n      propertyTypeField = _useState2[0],\n      setPropertyTypeField = _useState2[1];\n\n  var _useState3 = useState(1),\n      transactionTypeField = _useState3[0],\n      setTransactionTypeField = _useState3[1];\n\n  var _useState4 = useState([]),\n      activeProperties = _useState4[0],\n      setActiveProperties = _useState4[1];\n\n  useEffect(function () {\n    var activeProperties = transactions.find(function (transaction) {\n      return transaction.id === transactionTypeField;\n    }).propertyTypes.map(function (property) {\n      return properties.find(function (p) {\n        return p.id === property;\n      });\n    });\n    setActiveProperties(activeProperties);\n  }, [transactionTypeField]);\n\n  var setTypeField = function setTypeField(e) {\n    setTransactionTypeField(e.target.value);\n  };\n\n  var setPropertyField = function setPropertyField(e) {\n    setPropertyTypeField(e.target.value);\n  };\n\n  var setCityField = function setCityField(e) {\n    setCityTypeField(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    position: \"start\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"grouped-native-select\",\n        children: \"What will you do?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n        value: transactionTypeField,\n        onChange: setTypeField,\n        children: transactions.map(function (transaction) {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: transaction.id,\n            children: transaction.slug\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: (_errors$transaction = errors.transaction) === null || _errors$transaction === void 0 ? void 0 : _errors$transaction.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormControl, {\n      variant: \"outlined\",\n      className: classes.formControl,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"grouped-select\",\n        children: \"Type House\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Select, {\n        value: propertyTypeField,\n        onChange: setPropertyField,\n        children: activeProperties.map(function (property) {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: property.id,\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: property.slug\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, _this)\n          }, property.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: (_errors$properties = errors.properties) === null || _errors$properties === void 0 ? void 0 : _errors$properties.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: [classes.margin, classes.formControl],\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        options: cities,\n        getOptionLabel: function getOptionLabel(option) {\n          return option.slug;\n        },\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n            value: cityTypeField,\n            onChange: setCityField,\n            label: \"Combo box\",\n            className: classes.formControl,\n            variant: \"outlined\"\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.formControl,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.submit,\n        onClick: handleSubmit(onSubmit),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Search, \"0CrK114Eaoxuo6Kan2KhsVhtwJA=\", false, function () {\n  return [useStylesSearch];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/alejaocampo/Downloads/package/components/Banner/Search/index.js"],"names":["useForm","Typography","Paper","InputLabel","ListSubheader","MenuItem","FormControl","Select","TextField","Button","useStylesSearch","BootstrapInput","useState","useEffect","Autocomplete","Search","transactions","properties","cities","console","log","classes","cityTypeField","setCityTypeField","propertyTypeField","setPropertyTypeField","transactionTypeField","setTransactionTypeField","activeProperties","setActiveProperties","find","transaction","id","propertyTypes","map","property","p","setTypeField","e","target","value","setPropertyField","setCityField","formControl","slug","errors","message","margin","option","params","submit","handleSubmit","onSubmit"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { Typography } from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useStylesSearch, BootstrapInput } from \"./SearchStyle\";\nimport { useState, useEffect } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst Search = ({ transactions, properties, cities }) => {\n  console.log(transactions);\n  console.log(properties);\n  const classes = useStylesSearch();\n  const [cityTypeField, setCityTypeField] = useState(1);\n  const [propertyTypeField, setPropertyTypeField] = useState(1);\n  const [transactionTypeField, setTransactionTypeField] = useState(1);\n  const [activeProperties, setActiveProperties] = useState([]);\n\n  useEffect(() => {\n    const activeProperties = transactions\n      .find((transaction) => transaction.id === transactionTypeField)\n      .propertyTypes.map((property) =>\n        properties.find((p) => p.id === property)\n      );\n\n    setActiveProperties(activeProperties);\n  }, [transactionTypeField]);\n\n  const setTypeField = (e) => {\n    setTransactionTypeField(e.target.value);\n  };\n\n  const setPropertyField = (e) => {\n    setPropertyTypeField(e.target.value);\n  };\n\n  const setCityField = (e) => {\n    setCityTypeField(e.target.value);\n  };\n\n  return (\n    <Paper position=\"start\">\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-native-select\">\n          What will you do?\n        </InputLabel>\n        <Select value={transactionTypeField} onChange={setTypeField}>\n          {transactions.map((transaction) => (\n            <MenuItem value={transaction.id}>{transaction.slug}</MenuItem>\n          ))}\n        </Select>\n        <Typography>{errors.transaction?.message}</Typography>\n      </FormControl>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel htmlFor=\"grouped-select\">Type House</InputLabel>\n        <Select value={propertyTypeField} onChange={setPropertyField}>\n          {activeProperties.map((property) => (\n            <MenuItem key={property.id} value={property.id}>\n              <em>{property.slug}</em>\n            </MenuItem>\n          ))}\n        </Select>\n        <Typography>{errors.properties?.message}</Typography>\n      </FormControl>\n      <FormControl className={[classes.margin, classes.formControl]}>\n        <Autocomplete\n          options={cities}\n          getOptionLabel={(option) => option.slug}\n          renderInput={(params) => (\n            <TextField\n              {...params}\n              value={cityTypeField}\n              onChange={setCityField}\n              label=\"Combo box\"\n              className={classes.formControl}\n              variant=\"outlined\"\n            />\n          )}\n        />\n      </FormControl>\n      <FormControl className={classes.formControl}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={handleSubmit(onSubmit)}\n        >\n          Search\n        </Button>\n      </FormControl>\n    </Paper>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}