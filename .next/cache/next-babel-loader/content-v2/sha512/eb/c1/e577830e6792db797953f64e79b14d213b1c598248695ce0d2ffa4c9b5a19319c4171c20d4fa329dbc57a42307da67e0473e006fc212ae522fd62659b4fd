{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alejaocampo/Downloads/package/components/Banner/Search/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useForm } from \"react-hook-form\";\nimport { Typography } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useStylesSearch, BootstrapInput } from \"./SearchStyle\";\nimport { useState, useEffect } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst Search = ({\n  transactions,\n  properties,\n  cities\n}) => {\n  const router = useRouter();\n  const classes = useStylesSearch();\n  const {\n    0: cityTypeField,\n    1: setCityTypeField\n  } = useState(1);\n  const {\n    0: propertyTypeField,\n    1: setPropertyTypeField\n  } = useState(1);\n  const {\n    0: transactionTypeField,\n    1: setTransactionTypeField\n  } = useState(1);\n  const {\n    0: activeProperties,\n    1: setActiveProperties\n  } = useState([]);\n  useEffect(() => {\n    const activeProperties = transactions.find(transaction => transaction.id === transactionTypeField).propertyTypes.map(property => properties.find(p => p.id === property));\n    setActiveProperties(activeProperties);\n  }, [transactionTypeField]);\n\n  const setTypeField = e => {\n    setTransactionTypeField(e.target.value);\n  };\n\n  const setPropertyField = e => {\n    setPropertyTypeField(e.target.value);\n  };\n\n  const setCityField = (e, {\n    zip\n  }) => {\n    console.log(zip);\n    setCityTypeField(zip);\n  };\n\n  const searchData = e => {\n    e.preventDefault();\n    router.push(`/${transactionTypeField}/${propertyTypeField}/${cityTypeField}`, {\n      query: {\n        transactionSlug: transactionTypeField,\n        propertyTypeSlug: propertyTypeField,\n        citySlug: cityTypeField\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    position: \"start\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchData,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"grouped-native-select\",\n          children: \"What will you do?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: transactionTypeField,\n          onChange: setTypeField,\n          children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: transaction.id,\n            children: transaction.slug\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"grouped-select\",\n          children: \"Type House\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: propertyTypeField,\n          onChange: setPropertyField,\n          children: activeProperties.map(property => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: property.id,\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: property.slug\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, property.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: [classes.margin, classes.formControl],\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          onChange: setCityField,\n          options: cities,\n          getOptionLabel: option => option.slug,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n            style: {\n              width: \"100%\"\n            },\n            label: \"Combo box\",\n            className: classes.formControl,\n            variant: \"outlined\"\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/alejaocampo/Downloads/package/components/Banner/Search/index.js"],"names":["useForm","Typography","useRouter","Paper","InputLabel","ListSubheader","MenuItem","FormControl","Select","TextField","Button","useStylesSearch","BootstrapInput","useState","useEffect","Autocomplete","Search","transactions","properties","cities","router","classes","cityTypeField","setCityTypeField","propertyTypeField","setPropertyTypeField","transactionTypeField","setTransactionTypeField","activeProperties","setActiveProperties","find","transaction","id","propertyTypes","map","property","p","setTypeField","e","target","value","setPropertyField","setCityField","zip","console","log","searchData","preventDefault","push","query","transactionSlug","propertyTypeSlug","citySlug","formControl","slug","margin","option","params","width","submit"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { Typography } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { useStylesSearch, BootstrapInput } from \"./SearchStyle\";\nimport { useState, useEffect } from \"react\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst Search = ({ transactions, properties, cities }) => {\n  const router = useRouter();\n\n  const classes = useStylesSearch();\n  const [cityTypeField, setCityTypeField] = useState(1);\n  const [propertyTypeField, setPropertyTypeField] = useState(1);\n  const [transactionTypeField, setTransactionTypeField] = useState(1);\n  const [activeProperties, setActiveProperties] = useState([]);\n\n  useEffect(() => {\n    const activeProperties = transactions\n      .find((transaction) => transaction.id === transactionTypeField)\n      .propertyTypes.map((property) =>\n        properties.find((p) => p.id === property)\n      );\n\n    setActiveProperties(activeProperties);\n  }, [transactionTypeField]);\n\n  const setTypeField = (e) => {\n    setTransactionTypeField(e.target.value);\n  };\n\n  const setPropertyField = (e) => {\n    setPropertyTypeField(e.target.value);\n  };\n\n  const setCityField = (e, { zip }) => {\n    console.log(zip);\n    setCityTypeField(zip);\n  };\n\n  const searchData = (e) => {\n    e.preventDefault();\n    router.push(\n      `/${transactionTypeField}/${propertyTypeField}/${cityTypeField}`,\n      {\n        query: {\n          transactionSlug: transactionTypeField,\n          propertyTypeSlug: propertyTypeField,\n          citySlug: cityTypeField,\n        },\n      }\n    );\n  };\n\n  return (\n    <Paper position=\"start\">\n      <form onSubmit={searchData}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel htmlFor=\"grouped-native-select\">\n            What will you do?\n          </InputLabel>\n          <Select value={transactionTypeField} onChange={setTypeField}>\n            {transactions.map((transaction) => (\n              <MenuItem value={transaction.id}>{transaction.slug}</MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel htmlFor=\"grouped-select\">Type House</InputLabel>\n          <Select value={propertyTypeField} onChange={setPropertyField}>\n            {activeProperties.map((property) => (\n              <MenuItem key={property.id} value={property.id}>\n                <em>{property.slug}</em>\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={[classes.margin, classes.formControl]}>\n          <Autocomplete\n            onChange={setCityField}\n            options={cities}\n            getOptionLabel={(option) => option.slug}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                style={{ width: \"100%\" }}\n                label=\"Combo box\"\n                className={classes.formControl}\n                variant=\"outlined\"\n              />\n            )}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Search\n          </Button>\n        </FormControl>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}