{"ast":null,"code":"import _defineProperty from \"/Users/alejaocampo/Downloads/package/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/alejaocampo/Downloads/package/components/Banner/Search/index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useForm } from \"react-hook-form\";\nimport { Paper, InputLabel, MenuItem, FormControl, Select, TextField, Button } from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useStylesSearch } from \"./SearchStyle\";\nimport { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nvar Search = function Search(_ref) {\n  _s();\n\n  var transactions = _ref.transactions,\n      properties = _ref.properties,\n      cities = _ref.cities;\n  console.log(transactions);\n  var router = useRouter();\n  var classes = useStylesSearch();\n\n  var _useState = useState(1),\n      cityTypeField = _useState[0],\n      setCityTypeField = _useState[1];\n\n  var _useState2 = useState(1),\n      propertyTypeField = _useState2[0],\n      setPropertyTypeField = _useState2[1];\n\n  var _useState3 = useState(1),\n      transactionTypeField = _useState3[0],\n      setTransactionTypeField = _useState3[1];\n\n  var _useState4 = useState([]),\n      activeProperties = _useState4[0],\n      setActiveProperties = _useState4[1];\n\n  useEffect(function () {\n    var activeProperties = transactions.find(function (transaction) {\n      return transaction.id === transactionTypeField;\n    }).propertyTypes.map(function (property) {\n      return properties.find(function (p) {\n        return p.id === property;\n      });\n    });\n    setActiveProperties(activeProperties);\n  }, [transactionTypeField]);\n\n  var setTypeField = function setTypeField(e) {\n    setTransactionTypeField(e.target.value);\n  };\n\n  var setPropertyField = function setPropertyField(e) {\n    setPropertyTypeField(e.target.value);\n  };\n\n  var setCityField = function setCityField(e, _ref2) {\n    var zip = _ref2.zip;\n    setCityTypeField(zip);\n  };\n\n  var searchData = function searchData(e) {\n    e.preventDefault();\n    router.push(\"/\".concat(transactionTypeField, \"/\").concat(propertyTypeField, \"/\").concat(cityTypeField));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    position: \"start\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchData,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"grouped-native-select\",\n          children: \"What will you do?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Select, {\n          value: transactionTypeField,\n          onChange: setTypeField,\n          children: transactions.map(function (transaction) {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: transaction.id,\n              children: transaction.slug\n            }, transaction.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormControl, {\n        variant: \"outlined\",\n        className: classes.formControl,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"grouped-select\",\n          children: \"Type House\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Select, {\n          value: propertyTypeField,\n          onChange: setPropertyField,\n          children: activeProperties.map(function (property) {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: property.id,\n              children: /*#__PURE__*/_jsxDEV(\"em\", {\n                children: property.slug\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, _this)\n            }, property.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: clsx(classes.margin, classes.formControl),\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          onChange: setCityField,\n          options: cities,\n          getOptionLabel: function getOptionLabel(option) {\n            return option.slug;\n          },\n          renderInput: function renderInput(params) {\n            return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n              style: {\n                width: \"100%\"\n              },\n              label: \"City or Zip code\",\n              className: classes.formControl,\n              variant: \"outlined\"\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Search, \"Abg29TxT9iKoAI4hwgO9NL6VK/g=\", false, function () {\n  return [useRouter, useStylesSearch];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/alejaocampo/Downloads/package/components/Banner/Search/index.js"],"names":["useForm","Paper","InputLabel","MenuItem","FormControl","Select","TextField","Button","useRouter","useStylesSearch","useState","useEffect","clsx","Autocomplete","Search","transactions","properties","cities","console","log","router","classes","cityTypeField","setCityTypeField","propertyTypeField","setPropertyTypeField","transactionTypeField","setTransactionTypeField","activeProperties","setActiveProperties","find","transaction","id","propertyTypes","map","property","p","setTypeField","e","target","value","setPropertyField","setCityField","zip","searchData","preventDefault","push","formControl","slug","margin","option","params","width","submit"],"mappings":"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","sourcesContent":["import { useForm } from \"react-hook-form\";\nimport {\n  Paper,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  Select,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport { useRouter } from \"next/router\";\nimport { useStylesSearch } from \"./SearchStyle\";\nimport { useState, useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst Search = ({ transactions, properties, cities }) => {\n  console.log(transactions);\n  const router = useRouter();\n\n  const classes = useStylesSearch();\n\n  const [cityTypeField, setCityTypeField] = useState(1);\n  const [propertyTypeField, setPropertyTypeField] = useState(1);\n  const [transactionTypeField, setTransactionTypeField] = useState(1);\n  const [activeProperties, setActiveProperties] = useState([]);\n\n  useEffect(() => {\n    const activeProperties = transactions\n      .find((transaction) => transaction.id === transactionTypeField)\n      .propertyTypes.map((property) =>\n        properties.find((p) => p.id === property)\n      );\n\n    setActiveProperties(activeProperties);\n  }, [transactionTypeField]);\n\n  const setTypeField = (e) => {\n    setTransactionTypeField(e.target.value);\n  };\n\n  const setPropertyField = (e) => {\n    setPropertyTypeField(e.target.value);\n  };\n\n  const setCityField = (e, { zip }) => {\n    setCityTypeField(zip);\n  };\n\n  const searchData = (e) => {\n    e.preventDefault();\n    router.push(\n      `/${transactionTypeField}/${propertyTypeField}/${cityTypeField}`\n    );\n  };\n\n  return (\n    <Paper position=\"start\">\n      <form onSubmit={searchData}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel htmlFor=\"grouped-native-select\">\n            What will you do?\n          </InputLabel>\n          <Select value={transactionTypeField} onChange={setTypeField}>\n            {transactions.map((transaction) => (\n              <MenuItem key={transaction.id} value={transaction.id}>\n                {transaction.slug}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel htmlFor=\"grouped-select\">Type House</InputLabel>\n          <Select value={propertyTypeField} onChange={setPropertyField}>\n            {activeProperties.map((property) => (\n              <MenuItem key={property.id} value={property.id}>\n                <em>{property.slug}</em>\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <FormControl className={clsx(classes.margin, classes.formControl)}>\n          <Autocomplete\n            onChange={setCityField}\n            options={cities}\n            getOptionLabel={(option) => option.slug}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                style={{ width: \"100%\" }}\n                label=\"City or Zip code\"\n                className={classes.formControl}\n                variant=\"outlined\"\n              />\n            )}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Search\n          </Button>\n        </FormControl>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}